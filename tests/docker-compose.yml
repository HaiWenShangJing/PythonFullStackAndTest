services:
  # 测试数据库
  test-db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ai_crud_test
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api-test:
    build:
      context: ..
      dockerfile: tests/Dockerfile.test
    working_dir: /app
    env_file:
      - .env.test
    volumes:
      - ..:/app
    environment:
      - ENVIRONMENT=test
      - DB_HOST=test-db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=ai_crud_test
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@test-db:5432/ai_crud_test
    command: >
      bash -c "export PYTHONPATH=/app && pytest tests/api --disable-warnings -v --html=tests/report.html --self-contained-html --tb=long"
    depends_on:
      test-db:
        condition: service_healthy

  ui-test:
    build:
      context: ..
      dockerfile: tests/Dockerfile.test
    working_dir: /app
    env_file:
      - .env.test
    volumes:
      - ..:/app
    environment:
      - ENVIRONMENT=test
      - DB_HOST=test-db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=ai_crud_test
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@test-db:5432/ai_crud_test
    command: >
      bash -c "pytest tests/ui --disable-warnings -v --html=tests/ui-report.html --self-contained-html --tb=long"
    depends_on:
      - api-test