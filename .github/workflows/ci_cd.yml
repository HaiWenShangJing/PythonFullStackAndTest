name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          
      - name: Install dependencies
        run: |
          poetry install
          
      - name: Lint with flake8
        run: |
          poetry run flake8 backend frontend tests
          
      - name: Check formatting with black
        run: |
          poetry run black --check backend frontend tests
          
      - name: Sort imports with isort
        run: |
          poetry run isort --check-only backend frontend tests
          
      - name: Type check with mypy
        run: |
          poetry run mypy backend frontend
  
  test-api:
    runs-on: ubuntu-latest
    needs: lint
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ai_crud_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          
      - name: Install dependencies
        run: |
          poetry install
          
      - name: Run API tests
        run: |
          poetry run pytest tests/api --cov=backend
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/ai_crud_test
          ENVIRONMENT: test
          
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
  
  test-ui:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          
      - name: Install dependencies
        run: |
          poetry install
          
      - name: Start services with docker-compose
        run: |
          docker-compose -f docker-compose.yml up -d --profile testing
          
      - name: Wait for services to be ready
        run: |
          sleep 30
          
      - name: Run UI tests
        run: |
          poetry run pytest tests/ui
        env:
          SELENIUM_HUB_URL: http://localhost:4444/wd/hub
          STREAMLIT_URL: http://localhost:8501
          
      - name: Stop docker-compose
        run: |
          docker-compose -f docker-compose.yml down
  
  build:
    runs-on: ubuntu-latest
    needs: [test-api, test-ui]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: yourusername/fullstack-ai-crud:latest
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Placeholder for deployment
        run: |
          echo "This is where you would deploy your application to your hosting environment"
          echo "For example, using AWS, Azure, Google Cloud, or a custom server"